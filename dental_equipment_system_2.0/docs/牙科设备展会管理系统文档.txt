# 牙科设备展会管理系统文档

## 1. 系统概述

牙科设备展会管理系统是一个用于管理牙科设备展会信息的综合管理平台。系统主要包含以下功能模块：

- 产品管理：管理展会相关的牙科设备产品信息
- 展会管理：管理展会基本信息和日程安排
- 展会产品关联管理：管理产品与展会的关联关系
- 数据可视化：提供各类统计数据的图表展示
- 数据导出：支持多种格式的数据导出功能

## 2. 系统架构

### 2.1 整体架构

系统采用模块化设计，主要分为以下几个核心模块：

```
dental_equipment_system/
├── config/         # 配置管理模块
├── database/       # 数据库操作模块
├── models/         # 数据模型模块
├── ui/             # 用户界面模块
├── utils/          # 工具模块
├── resources/      # 资源文件
├── docs/           # 文档
├── tests/          # 测试用例
├── main.py         # 程序入口
└── requirements.txt # 项目依赖
```

### 2.2 核心模块说明

#### 配置模块 (config/)
- 负责系统配置的管理和加载
- 包含数据库配置、UI配置、导出配置等
- 提供配置的读取和保存功能

#### 数据库模块 (database/)
- 实现数据库连接池管理
- 提供数据库操作的统一接口
- 实现事务管理和异常处理

#### 数据模型模块 (models/)
- 定义系统核心数据结构
- 实现数据验证和业务逻辑
- 包含产品、展会、关联记录等模型

#### 用户界面模块 (ui/)
- 实现系统的图形用户界面
- 包含主窗口、对话框和自定义控件
- 处理用户交互和事件响应

#### 工具模块 (utils/)
- 提供通用工具函数和类
- 实现数据导出功能
- 包含日志记录和统计分析功能

## 3. 数据库设计

### 3.1 数据库结构

系统使用MySQL数据库，包含以下主要表：

#### products（产品表）
- product_id: INT (主键)
- model: VARCHAR(50) (产品型号)
- name: VARCHAR(100) (产品名称)
- color: VARCHAR(20) (产品颜色)
- created_at: TIMESTAMP
- updated_at: TIMESTAMP

#### exhibitions（展会表）
- exhibition_id: INT (主键)
- name: VARCHAR(100) (展会名称)
- address: VARCHAR(100) (展会地址)
- start_date: DATE (开始日期)
- end_date: DATE (结束日期)
- created_at: TIMESTAMP
- updated_at: TIMESTAMP

#### product_exhibition_records（产品展会关联表）
- record_id: INT (主键，自增)
- product_id: INT (外键关联products表)
- exhibition_id: INT (外键关联exhibitions表)
- status: ENUM('待参展', '参展中', '已结束')
- created_at: TIMESTAMP
- updated_at: TIMESTAMP

### 3.2 数据库特性

- 使用外键约束确保数据完整性
- 实现自动更新时间戳
- 包含索引优化查询性能
- 实现状态自动更新触发器

## 4. 用户界面

### 4.1 主要界面

- 主窗口：系统主界面，包含菜单栏、工具栏和状态栏
- 产品管理对话框：管理产品信息
- 展会管理对话框：管理展会信息
- 关联记录对话框：管理产品展会关联
- 数据可视化对话框：显示统计图表

### 4.2 界面特性

- 支持主题切换
- 实现表格数据筛选和排序
- 提供实时搜索功能
- 支持数据导出功能

## 5. 功能模块

### 5.1 产品管理

- 产品信息的增删改查
- 产品型号和颜色管理
- 产品数据验证
- 产品统计分析

### 5.2 展会管理

- 展会信息的增删改查
- 展会日程管理
- 地址信息管理
- 展会状态跟踪

### 5.3 关联记录管理

- 产品展会关联的增删改查
- 参展状态管理
- 自动状态更新
- 关联数据统计

### 5.4 数据可视化

- 产品分布统计
- 展会时间分布
- 参展状态统计
- 趋势分析图表

### 5.5 数据导出

支持以下格式导出：
- Excel格式
- CSV格式
- PDF格式（含图表）

## 6. 工具和实用功能

### 6.1 日志管理

- 操作日志记录
- 错误日志记录
- 日志文件轮转
- 日志级别控制

### 6.2 配置管理

- 配置文件读写
- 配置项验证
- 默认配置管理
- 动态配置更新

### 6.3 数据导出功能

- 支持多种导出格式
- 自定义导出模板
- 批量导出功能
- 导出进度跟踪

## 7. 开发指南

### 7.1 环境配置

1. Python环境要求：Python 3.7+
2. 数据库要求：MySQL 5.7+
3. 依赖包安装：
```bash
pip install -r requirements.txt
```

### 7.2 开发规范

1. 代码风格遵循PEP 8规范
2. 使用类型注释和文档字符串
3. 遵循模块化和组件化原则
4. 实现异常处理和日志记录

### 7.3 测试规范

1. 编写单元测试用例
2. 进行集成测试
3. 执行性能测试
4. 进行用户界面测试

## 8. 部署说明

### 8.1 系统要求

- 操作系统：Windows/Linux
- Python环境：Python 3.7+
- 数据库：MySQL 5.7+
- 内存：4GB+
- 磁盘空间：10GB+

### 8.2 部署步骤

1. 安装Python环境
2. 安装MySQL数据库
3. 创建数据库和表结构
4. 安装项目依赖
5. 配置系统参数
6. 启动应用程序

### 8.3 配置说明

主要配置文件：
- settings.json：系统主配置文件
- logging_config.py：日志配置文件
- database.py：数据库配置文件

## 9. 维护与支持

### 9.1 日常维护

- 数据库备份
- 日志文件管理
- 系统监控
- 性能优化

### 9.2 故障处理

- 数据库连接问题
- 界面显示异常
- 数据导出失败
- 系统崩溃处理

### 9.3 系统升级

- 版本升级流程
- 数据迁移方案
- 兼容性处理
- 回滚机制